// Операции с концом массива:
// arr.push(элемент1, элемент2...) добавляет элементы в конец.
// var elem = arr.pop() удаляет и возвращает последний элемент.

// Операции с началом массива:
// arr.unshift(элемент1, элемент2...) добавляет элементы в начало.
// var elem = arr.shift() удаляет и возвращает первый элемент.

// Методы push и unshift могут добавлять сразу по несколько элементов
// Методы push/pop выполняются быстро, а shift/unshift – медленно.

// Task #1: Получить последний элемент массива.
// Как получить последний элемент из произвольного массива?
// У нас есть массив goods. Сколько в нем элементов – не знаем, но можем прочитать из goods.length.
// Напишите код для получения последнего элемента goods.
const lastChar = goods[goods.length - 1];

// Task #2: Добавить новый элемент в массив.
// Как добавить элемент в конец произвольного массива?
// У нас есть массив goods. Напишите код для добавления в его конец значения «Компьютер».
goods.push('«Компьютер»');

// Task #3: Создание массива.
// Задача из 5 шагов-строк:
// - Создайте массив styles с элементами «Джаз», «Блюз».
// - Добавьте в конец значение «Рок-н-Ролл»
// - Замените предпоследнее значение с конца на «Классика». 
// Код замены предпоследнего значения должен работать для массивов любой длины.
// - Удалите первое значение массива и выведите его alert.
// - Добавьте в начало значения «Рэп» и «Регги».
let styles = ['«Джаз»', '«Блюз»'];
styles.push('Рок-н-Ролл');
styles[styles.length - 2] = '«Классика»';
alert(styles.shift());
styles.unshift('Рэп', 'Регги');

// Task #4: Получить случайное значение из массива.
// Напишите код для вывода alert случайного значения из массива
const arr = ["Яблоко", "Апельсин", "Груша", "Лимон"];
// P.S. Код для генерации случайного целого от min to max включительно:
// const rand = min + Math.floor(Math.random() * (max + 1 - min));
function rand(arr) {
	const rand = Math.floor(Math.random() * arr.length);

	alert( arr[rand] );
}

// Task #5: Создайте калькулятор для введённых значений.
// Напишите код, который:
// Запрашивает по очереди значения при помощи prompt и сохраняет их в массиве.
// Заканчивает ввод, как только посетитель введёт пустую строку, не число или нажмёт «Отмена».
// При этом ноль 0 не должен заканчивать ввод, это разрешённое число.
// Выводит сумму всех значений массива
// *** helper function, для проверки на число
function isNumeric(n) {
	return !isNaN(parseFloat(n)) && isFinite(n)
}
function calcInputValues() {
	let numberArr = [];
	let result = 0;

	for (var i = 0; i < Infinity; i++) {
		let number = prompt('Введите число');

		if (!isNumeric(number)) {
			return result;
		}
		numberArr.push(number);
		result += Number(number);
	}
}

// Решение из Learn JS:
let numbers = [];
while (true) {
	let value = prompt("Введите число", 0);
	if (value === "" || value === null || isNaN(value)) break;
	numbers.push(+value);
}
let sum = 0;
for (let i = 0; i < numbers.length; i++) {
	sum += numbers[i];
}
alert( sum );

// Task #6: Поиск в массиве.
// Создайте функцию find(arr, value), 
// которая ищет в массиве arr значение value и возвращает его номер, 
// если найдено, или -1, если не найдено.
function find(arr, value) {
	return arr.indexOf(value);
}

// Task #7: Фильтр диапазона.
// Создайте функцию filterRange(arr, a, b), которая принимает массив чисел arr и возвращает новый массив, 
// который содержит только числа из arr из диапазона от a до b. 
// То есть, проверка имеет вид a ≤ arr[i] ≤ b. Функция не должна менять arr.
function filterRange(arr, a, b) {
	let newArr = [];

	for (let i = 0; i < arr.length; i++) {
		if (arr[i] <= b && arr[i] >= a) {
			newArr.push(arr[i]);
		}
	}

	return newArr;
}

// Task #8: Решето Эратосфена.
// Найдите все простые числа до 100 и выведите их сумму.
function findPrimeNumbers(endValue = 100) {

}

// Task #9: Подмассив наибольшей суммы.
// На входе массив чисел, например: arr = [1, -2, 3, 4, -9, 6].
// Задача – найти непрерывный подмассив arr, сумма элементов которого максимальна.
// Ваша функция должна возвращать только эту сумму.
function getMaxSubSum(arr) {
	
}













